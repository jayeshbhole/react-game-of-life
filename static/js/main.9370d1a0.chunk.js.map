{"version":3,"sources":["useInterval.js","App.jsx","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","App","useState","running","setRunning","Array","from","length","Math","floor","random","lifeGrid","setLifeGrid","grid","newGrid","get","x","y","r","countNeighbors","neighbors","className","onClick","reset","lineBetween","i","fourQuarters","map","row","_","k","produce","gridCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9370d1a0.chunk.js","sourcesContent":["import { useRef, useEffect } from \"react\";\n\nfunction useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t}, [callback]);\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\t\tif (delay !== null) {\n\t\t\tlet id = setInterval(tick, delay);\n\t\t\treturn () => clearInterval(id);\n\t\t}\n\t}, [delay]);\n}\n\nexport default useInterval;\n","import { useState } from \"react\";\nimport useInterval from \"./useInterval\";\nimport produce from \"immer\";\nimport \"./styles.scss\";\n\nconst lineBetween = (setLifeGrid) => {\n\tsetLifeGrid(() => {\n\t\tconst grid = Array.from({ length: 30 }, () => Array.from({ length: 30 }, () => 1));\n\t\tgrid[13] = Array.from({ length: 30 }, () => 0);\n\t\tgrid[14] = Array.from({ length: 30 }, () => 0);\n\t\tgrid[15] = Array.from({ length: 30 }, () => 0);\n\t\treturn grid;\n\t});\n};\nconst fourQuarters = (setLifeGrid) => {\n\tsetLifeGrid(() => {\n\t\tconst grid = Array.from({ length: 30 }, () => Array.from({ length: 30 }, () => 1));\n\t\tgrid[13] = Array.from({ length: 30 }, () => 0);\n\t\tgrid[14] = Array.from({ length: 30 }, () => 0);\n\t\tgrid[15] = Array.from({ length: 30 }, () => 0);\n\t\tgrid[16] = Array.from({ length: 30 }, () => 0);\n\n\t\tfor (let i = 0; i < 30; i++) {\n\t\t\tgrid[i][13] = 0;\n\t\t}\n\t\tfor (let i = 0; i < 30; i++) {\n\t\t\tgrid[i][14] = 0;\n\t\t}\n\t\tfor (let i = 0; i < 30; i++) {\n\t\t\tgrid[i][15] = 0;\n\t\t}\n\t\tfor (let i = 0; i < 30; i++) {\n\t\t\tgrid[i][16] = 0;\n\t\t}\n\n\t\treturn grid;\n\t});\n};\nconst random = (setLifeGrid) => {\n\tsetLifeGrid(\n\t\tArray.from({ length: 30 }, () =>\n\t\t\tArray.from({ length: 30 }, () => Math.floor(Math.random() * 1.5))\n\t\t)\n\t);\n};\nconst reset = (setLifeGrid, setRunning) => {\n\tsetRunning(false);\n\tsetLifeGrid(Array.from({ length: 30 }, () => Array.from({ length: 30 }, () => 0)));\n};\n\nfunction App() {\n\tconst [running, setRunning] = useState(false);\n\tconst [lifeGrid, setLifeGrid] = useState(\n\t\tArray.from({ length: 30 }, () =>\n\t\t\tArray.from({ length: 30 }, () => Math.floor(Math.random() * 1.5))\n\t\t)\n\t);\n\n\tuseInterval(\n\t\t() => {\n\t\t\tsetLifeGrid((grid) => {\n\t\t\t\tconst newGrid = Array.from({ length: 30 }, () =>\n\t\t\t\t\tArray.from({ length: 30 }, () => 0)\n\t\t\t\t);\n\t\t\t\tconst get = (x, y, r = grid[x]) => {\n\t\t\t\t\treturn r ? r[y] || 0 : 0;\n\t\t\t\t};\n\t\t\t\tconst countNeighbors = (x, y) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tget(x - 1, y - 1) +\n\t\t\t\t\t\tget(x - 1, y) +\n\t\t\t\t\t\tget(x - 1, y + 1) +\n\t\t\t\t\t\tget(x, y - 1) +\n\t\t\t\t\t\tget(x, y + 1) +\n\t\t\t\t\t\tget(x + 1, y - 1) +\n\t\t\t\t\t\tget(x + 1, y) +\n\t\t\t\t\t\tget(x + 1, y + 1)\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tfor (let x = 0; x < 30; x++) {\n\t\t\t\t\tfor (let y = 0; y < 30; y++) {\n\t\t\t\t\t\tconst neighbors = countNeighbors(x, y);\n\t\t\t\t\t\tif (get(x, y)) {\n\t\t\t\t\t\t\tif (neighbors < 2) {\n\t\t\t\t\t\t\t\tnewGrid[x][y] = 0;\n\t\t\t\t\t\t\t} else if (neighbors < 4) {\n\t\t\t\t\t\t\t\tnewGrid[x][y] = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewGrid[x][y] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (neighbors === 3) {\n\t\t\t\t\t\t\tnewGrid[x][y] = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewGrid[x][y] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newGrid;\n\t\t\t});\n\t\t},\n\t\trunning ? 100 : null\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Game of Life</h1>\n\n\t\t\t<button onClick={() => setRunning(true)}>Start</button>\n\t\t\t<button onClick={() => setRunning(false)}>Stop</button>\n\t\t\t<button onClick={() => reset(setLifeGrid, setRunning)}>Reset</button>\n\t\t\t<button onClick={() => random(setLifeGrid)}>Random</button>\n\t\t\t<button onClick={() => lineBetween(setLifeGrid)}>Line B/w</button>\n\t\t\t<button onClick={() => fourQuarters(setLifeGrid)}>Four Quarters</button>\n\n\t\t\t<div className=\"grid\">\n\t\t\t\t{lifeGrid.map((row, i) =>\n\t\t\t\t\trow.map((_, k) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={`${i}-${k}`}\n\t\t\t\t\t\t\tclassName={`cell ${!!lifeGrid[i][k]}`}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tsetLifeGrid(\n\t\t\t\t\t\t\t\t\tproduce(lifeGrid, (gridCopy) => {\n\t\t\t\t\t\t\t\t\t\tgridCopy[i][k] = gridCopy[i][k] ^ 1;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}